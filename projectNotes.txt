1、vue cli3 想要配置绝对地址，需要创建vue.config.js来配置

2、.browserslistrc 文件来设置开发是的代码规范格式


、、、、、、、首页、、、、
3、首页头部导航，封装插槽，分为左中右三块插槽，给中间插槽插入文字

4、请求首页数据,在request.js中封装好了axios函数，在home.js中传入对应的数据地址，然后在首页调用

5、引入轮播图组件，拿到封装好的组件swiper，引用到home中，把获取到的图片数据插到里面

6、信息推荐展示，直接把数据传到组件中，然后遍历显示

7、添加推荐部分（其实就是一张图片），使用模板

8、导航栏的封装，这里没必要使用插槽（单纯的只是文字不同时，没必要使用插槽，直接遍历传入的参数）。添加样式和点击改变样式

9、根据商品列表，保存数据形式。制作列表组件

10、给分类栏三个按钮添加点击事件，点击之后把信息传到父组件（home）中，home在通过该信息展示对应的商品

、、、、、、、滚动条、、、
1、使用滚动条框架
 1.1：安装 npm install better-scroll --save
 1.2:  在“分类”组件中实验

2、better-scroll 扩展

3、在分类里实验

4、把BScroll封装到公共组件中使用，
  其中 ref如果是绑定在组件中的，那么通过**this.$refs.refname**获取到的是一个组件对象
         ref如果是绑定在普通的元素中，那么通过 **this.$refs.refname**获取到的是一个元素对象

5、封装返回顶部组件，添加效果(组件不能直接添加点击事件，除非加上native属性)

6、监听BScroll滚动，只有超过一定高度才显示返回顶部按钮，否则隐藏

7、BScroll上拉加载更多数据，监听上拉加载事件，向home传事件，得到当前模块加载数据

8、解决滚动条高度问题，在每一次图片加载的时候刷新高度，一般使用vuex来解决，这里使用原型

9、防抖动，如果每次在图片加载都刷新滚动高度，太影响性能。这里封装了，在一定时间内没有刷新图片，才去改变高度

10、重新加入上拉效果

11、导航栏吸顶效果，监听它的上距离。当上边距为0时，再把隐藏的导航栏显示出来。要让两个组件同步，需要分别设置ref，并同步两个组件中的index

12、在切换router的时候，home.vue会重新加载。要防止重新加载，要包含在<>中，并在关闭组件时记录位置，在重新进入时重新定位

、、、、、、、详情页、、、、

1、添加详情页，点击商品时，跳转到详情页，并通过动态路由传递商品参数

2、详情页顶部导航栏

3、得到详情页数据，把轮播图组件拿过来用，把数据渲染上去